/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 --types public/models/holograming_man.glb 
Author: foxyvfx7867 (https://sketchfab.com/foxyvfx7867)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/holograming-man-e749bf773cd34e3f965ad23d01b3cf06
Title: Holograming Man
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFAction = THREE.AnimationClip

type GLTFResult = GLTF & {
  nodes: {
    Object_85: THREE.SkinnedMesh
    Sphere_Material001_0: THREE.Mesh
    _rootJoint: THREE.Bone
  }
  materials: {
    Material: THREE.MeshStandardMaterial
    ['Material.001']: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['skinnedMesh'] | JSX.IntrinsicElements['mesh'] | JSX.IntrinsicElements['bone']>>

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/models/holograming_man.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group scale={0.01}>
        <group rotation={[-Math.PI / 2, 0, 0]} scale={100}>
          <primitive object={nodes._rootJoint} />
          <skinnedMesh geometry={nodes.Object_85.geometry} material={materials.Material} skeleton={nodes.Object_85.skeleton} />
        </group>
        <mesh geometry={nodes.Sphere_Material001_0.geometry} material={materials['Material.001']} position={[-89.204, 493.773, 200.937]} rotation={[-Math.PI / 2, 0, 0]} scale={100} />
      </group>
    </group>
  )
}

useGLTF.preload('/models/holograming_man.glb')